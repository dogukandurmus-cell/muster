name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: ["**"]

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      CI: true
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-Xmx3g"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Proje kökünü bul (package.json hangi klasördeyse)
      - name: Locate project root
        shell: bash
        run: |
          echo "Workspace tree:"; ls -la
          PKG_DIR="."
          if [ ! -f package.json ]; then
            FOUND=$(find . -maxdepth 3 -name package.json -not -path "*/node_modules/*" | head -n 1 || true)
            if [ -z "$FOUND" ]; then
              echo "::error::package.json bulunamadı. src/, public/, package.json ve vite.config.ts repo'da olmalı."
              exit 1
            fi
            PKG_DIR=$(dirname "$FOUND")
          fi
          echo "PKG_DIR=$PKG_DIR" >> $GITHUB_ENV
          echo "Using project dir: $PKG_DIR"; ls -la "$PKG_DIR"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/pnpm-lock.yaml', '**/yarn.lock') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Install deps
        working-directory: ${{ env.PKG_DIR }}
        run: |
          npm ci || npm i
          # Eksikse sık takılan bağımlılıkları ekle
          npm i -D @vitejs/plugin-react vite || true
          npm i react react-dom || true

      - name: Build web
        working-directory: ${{ env.PKG_DIR }}
        run: npm run build

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept licenses & install packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Install Capacitor + Android
        working-directory: ${{ env.PKG_DIR }}
        run: |
          npm i @capacitor/core @capacitor/android
          npm i -D @capacitor/cli
          npx cap init "MusteriZiyaret" com.sirket.ziyaret --web-dir=dist --npm-client npm || true
          npx cap add android || true
          npx cap sync android

            - name: Patch AndroidManifest permissions (safe)
        if: ${{ hashFiles('android-manifest-patch.txt') != '' }}
        working-directory: ${{ env.PKG_DIR }}
        run: |
          set -e
          MANIFEST=android/app/src/main/AndroidManifest.xml
          if [ -f "$MANIFEST" ]; then
            # android-manifest-patch.txt içindeki her satırı <manifest> tag'ından hemen sonra ekle
            while IFS= read -r line || [ -n "$line" ]; do
              # Zaten varsa atla (literal arama)
              if grep -Fq "$line" "$MANIFEST"; then
                continue
              fi
              # <manifest ...> satırından sonra güvenli biçimde ekle
              perl -0777 -pe "s|(<manifest[^>]*>)|$1\n  $line|s" -i "$MANIFEST"
            done < android-manifest-patch.txt
            echo "Patched permissions:"
            grep -F "<uses-permission" "$MANIFEST" || true
          else
            echo "Manifest not found: $MANIFEST"
          fi


      - name: Make gradlew executable
        working-directory: ${{ env.PKG_DIR }}
        run: if [ -f android/gradlew ]; then chmod +x android/gradlew; fi

      - name: Build Debug APK
        working-directory: ${{ env.PKG_DIR }}/android
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: ${{ env.PKG_DIR }}/android/app/build/outputs/apk/debug/app-debug.apk
